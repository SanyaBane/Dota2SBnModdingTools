<UserControl
  x:Class="SBnDota2ModExporter.GUI.Views.MainControlView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:viewModels="clr-namespace:SBnDota2ModExporter.GUI.ViewModels"
  xmlns:views="clr-namespace:SBnDota2ModExporter.GUI.Views"
  xmlns:dataTemplateSelectors="clr-namespace:SBnDota2ModExporter.GUI.Views.DataTemplateSelectors"
  xmlns:local="clr-namespace:SBnDota2ModExporter.GUI.Views"
  xmlns:converters="clr-namespace:SBnDota2ModExporter.Converters"
  xmlns:converters1="clr-namespace:Common.WPF.Converters;assembly=Common.WPF"
  mc:Ignorable="d"
  d:DesignHeight="300" d:DesignWidth="300"
  d:DataContext="{d:DesignInstance viewModels:MainControlViewModel, IsDesignTimeCreatable=True}">

  <UserControl.Resources>

    <converters1:BooleanInvertConverter x:Key="BooleanInvertConverter" />
    <converters1:NullToVisibilityConverter x:Key="NullToVisibilityConverter" TreatEmptyStringAsNull="True" />
    <converters1:NullToVisibilityConverter x:Key="NullToVisibilityInvertedConverter" TreatEmptyStringAsNull="True" Inverse="True" />

    <DataTemplate x:Key="WhenItemSelected">
      <views:AddonExporterInfoView />
    </DataTemplate>

    <DataTemplate x:Key="WhenItemNotSelected">
      <!-- <TextBlock -->
      <!--   Text="WhenItemNotSelected" /> -->
    </DataTemplate>

    <dataTemplateSelectors:SelectedAddonExporterFileDataTemplateSelector
      x:Key="SelectedModExportContentTemplateSelector"
      WhenItemSelected="{StaticResource WhenItemSelected}"
      WhenItemNotSelected="{StaticResource WhenItemNotSelected}" />
  </UserControl.Resources>

  <Grid
    Margin="3"
    IsEnabled="{Binding IsExporting, Mode=OneWay, Converter={StaticResource BooleanInvertConverter}}">
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="*" />
    </Grid.RowDefinitions>

    <!-- <Menu -->
    <!--   x:Name="MainMenu" -->
    <!--   Grid.Row="0" -->
    <!--   Height="26"> -->
    <!-- -->
    <!--   <MenuItem -->
    <!--     Header="File" -->
    <!--     Height="{Binding Path=Height, ElementName=MainMenu}"> -->
    <!--     <MenuItem -->
    <!--       Header="New ModExporter file" -->
    <!--       IsCheckable="False" -->
    <!--       Command="{Binding NewModExporterFileCommand}" /> -->
    <!--     <Separator /> -->
    <!--     <MenuItem -->
    <!--       Header="Save ModExporter file" -->
    <!--       IsCheckable="False" -->
    <!--       Command="{Binding SaveModExporterFileCommand}" /> -->
    <!--     <MenuItem -->
    <!--       Header="Load ModExporter file" -->
    <!--       IsCheckable="False" -->
    <!--       Command="{Binding LoadModExporterFileCommand}" /> -->
    <!--   </MenuItem> -->
    <!-- -->
    <!-- </Menu> -->

    <Grid
      Grid.Row="1"
      x:Name="gridReadonlyInformation"
      Margin="0 3 0 0">

      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="Auto" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>

      <TextBlock
        Grid.Column="0"
        Grid.Row="0"
        VerticalAlignment="Center"
        Text="Path to 'dota2.exe': " />

      <TextBox
        Grid.Column="1"
        Grid.Row="0"
        Style="{StaticResource tbReadOnlyPathToFile}"
        Margin="5 0 0 0"
        Height="24"
        Text="{Binding Dota2ExecutableFullPath, Mode=OneWay}" />

      <Button
        Grid.Column="2"
        Grid.Row="0"
        Margin="5 0 0 0"
        Content="Set path to 'dota2.exe'"
        Command="{Binding SetPathToDota2ExeCommand}" />

      <TextBlock
        Grid.Column="0"
        Grid.Row="1"
        Margin="0 5 0 0  "
        VerticalAlignment="Center"
        Text="Output directory: " />

      <TextBox
        Grid.Column="1"
        Grid.Row="1"
        Style="{StaticResource tbReadOnlyPathToFile}"
        Margin="5 5 0 0"
        Height="24"
        Text="{Binding OutputDirectoryFullPath, Mode=OneWay}" />

      <Button
        Grid.Column="2"
        Grid.Row="1"
        Margin="5 5 0 0"
        Content="Set output directory"
        Command="{Binding SetPathToOutputDirectoryCommand}" />

      <Separator
        Grid.Column="0" Grid.ColumnSpan="3"
        Grid.Row="2"
        Margin="0 10 0 0" />

    </Grid>

    <Grid
      Grid.Row="3"
      x:Name="gridLoadedAddonExporterFiles"
      Margin="0 5 0 0">
      <Grid
        Visibility="{Binding OutputDirectoryFullPath, Mode=OneWay, Converter={StaticResource NullToVisibilityInvertedConverter}}">
        <TextBlock
          Text="*OUTPUT DIRECTORY NOT SET*"
          HorizontalAlignment="Center"
          VerticalAlignment="Center"
          Foreground="Red" />
      </Grid>
      <Grid
        Visibility="{Binding OutputDirectoryFullPath, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}">
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto" />
          <RowDefinition Height="*" />
          <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <TextBlock
          Grid.Row="0"
          VerticalAlignment="Center"
          Text="Loaded addon export files:" />

        <Grid
          Grid.Row="1"
          HorizontalAlignment="Stretch">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="400" MinWidth="200" MaxWidth="700" />
            <ColumnDefinition Width="4" MinWidth="4" />
            <ColumnDefinition Width="*" />
          </Grid.ColumnDefinitions>

          <Grid
            Grid.Column="0"
            Margin="0 0 10 0">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <DataGrid
              Grid.Column="0"
              x:Name="dgLoadedAddonExportFiles"
              Style="{StaticResource DefaultDataGridStyle}"
              SelectionMode="Single"
              SelectionUnit="FullRow"
              RowHeight="32"
              ItemsSource="{Binding AddonExporterInfoViewModels}"
              SelectedItem="{Binding SelectedAddonExporterFileViewModel}">

              <DataGrid.Columns>
                <DataGridTemplateColumn
                  MinWidth="45"
                  Width="45"
                  CanUserSort="False">
                  <DataGridTemplateColumn.HeaderTemplate>
                    <DataTemplate>
                      <TextBlock
                        Text="State"
                        ToolTip="{Binding Text, RelativeSource={RelativeSource Self}}" />
                    </DataTemplate>
                  </DataGridTemplateColumn.HeaderTemplate>
                  <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                      <Grid>
                        <Grid.Style>
                          <Style TargetType="{x:Type Grid}">
                            <Setter Property="Background" Value="Red" />
                            <Style.Triggers>
                              <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                  <Condition Binding="{Binding IsSaved}" Value="True" />
                                  <Condition Binding="{Binding IsDirty}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="Green" />
                              </MultiDataTrigger>
                              <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                  <Condition Binding="{Binding IsSaved}" Value="True" />
                                  <Condition Binding="{Binding IsDirty}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="Yellow" />
                              </MultiDataTrigger>
                            </Style.Triggers>
                          </Style>
                        </Grid.Style>
                        <TextBlock
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          ToolTip="{Binding Text, RelativeSource={RelativeSource Self}}">
                          <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                              <Setter Property="Text" Value="Not saved" />
                              <Setter Property="Foreground" Value="Black" />
                              <Style.Triggers>
                                <MultiDataTrigger>
                                  <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSaved}" Value="True" />
                                    <Condition Binding="{Binding IsDirty}" Value="False" />
                                  </MultiDataTrigger.Conditions>
                                  <Setter Property="Text" Value="Saved" />
                                  <Setter Property="Foreground" Value="White" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                  <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSaved}" Value="True" />
                                    <Condition Binding="{Binding IsDirty}" Value="True" />
                                  </MultiDataTrigger.Conditions>
                                  <Setter Property="Text" Value="Modified" />
                                  <Setter Property="Foreground" Value="Black" />
                                </MultiDataTrigger>
                              </Style.Triggers>
                            </Style>
                          </TextBlock.Style>
                        </TextBlock>
                      </Grid>
                    </DataTemplate>
                  </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn
                  Width="*"
                  MinWidth="150"
                  CanUserSort="False">
                  <DataGridTemplateColumn.HeaderTemplate>
                    <DataTemplate>
                      <TextBlock
                        Text="Name"
                        ToolTip="{Binding Text, RelativeSource={RelativeSource Self}}" />
                    </DataTemplate>
                  </DataGridTemplateColumn.HeaderTemplate>
                  <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                      <TextBlock
                        VerticalAlignment="Center"
                        Text="{Binding Path=AddonConfigFileName, Mode=OneWay}"
                        ToolTip="{Binding Text, RelativeSource={RelativeSource Self}}" />
                    </DataTemplate>
                  </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn
                  MinWidth="45"
                  Width="45"
                  CanUserSort="False">
                  <DataGridTemplateColumn.HeaderTemplate>
                    <DataTemplate>
                      <TextBlock
                        Text="Export"
                        ToolTip="{Binding Text, RelativeSource={RelativeSource Self}}" />
                    </DataTemplate>
                  </DataGridTemplateColumn.HeaderTemplate>
                  <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                      <CheckBox
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        IsChecked="{Binding Path=IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </DataTemplate>
                  </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
              </DataGrid.Columns>
            </DataGrid>

            <StackPanel
              Grid.Column="1"
              Orientation="Vertical"
              Margin="5 0 0 0"
              VerticalAlignment="Center">
              <Button
                x:Name="btnMoveUp"
                Margin="0 0 0 0"
                FontFamily="Marlett"
                FontSize="20"
                Content="5"
                Command="{Binding MoveUpCommand}" />
              <Button
                x:Name="btnMoveDown"
                Margin="0 5 0 0"
                FontFamily="Marlett"
                FontSize="20"
                Content="6"
                Command="{Binding MoveDownCommand}" />
            </StackPanel>
          </Grid>

          <GridSplitter
            Grid.Column="1"
            ResizeDirection="Columns"
            ResizeBehavior="PreviousAndNext"
            HorizontalAlignment="Stretch"
            Background="SlateGray" />

          <ContentControl
            Grid.Column="2"
            x:Name="SelectedAddonExporterFile"
            Margin="0 0 0 0"
            Content="{Binding SelectedAddonExporterFileViewModel}"
            ContentTemplateSelector="{StaticResource SelectedModExportContentTemplateSelector}" />
        </Grid>

        <Grid
          Grid.Row="2"
          Margin="0 3 0 0">
          <StackPanel
            Orientation="Horizontal">
            <Button
              Content="Create"
              Margin="0 0 0 0"
              Height="30"
              HorizontalAlignment="Left"
              Command="{Binding CreateAddonExporterFileCommand}" />
            <Button
              Content="Duplicate"
              Margin="5 0 0 0"
              Height="30"
              HorizontalAlignment="Left"
              Command="{Binding DuplicateAddonExporterFileCommand}" />
            <Button
              Content="Load"
              Margin="3 0 0 0"
              Height="30"
              HorizontalAlignment="Left"
              Command="{Binding LoadAddonExporterFileCommand}" />
            <Button
              Content="Remove selected"
              Margin="3 0 0 0"
              Height="30"
              HorizontalAlignment="Left"
              Command="{Binding RemoveAddonExporterFileCommand}" />

            <Button
              Margin="10 0 0 0"
              Height="30"
              HorizontalAlignment="Left"
              Padding="3"
              FontWeight="Bold"
              Content="Export all selected addons"
              ToolTip="Execute specified export commands."
              Command="{Binding ExportSelectedAddonsCommand}" />
          </StackPanel>
        </Grid>
      </Grid>
    </Grid>
  </Grid>
</UserControl>